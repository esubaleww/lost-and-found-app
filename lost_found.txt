create database lost_found;



CREATE TABLE students (
  student_id VARCHAR(50) PRIMARY KEY,
  full_name VARCHAR(100) NOT NULL,
  email VARCHAR(100) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  phone VARCHAR(20),
  profile_picture VARCHAR(255),
  status VARCHAR(20) DEFAULT 'verified',
  role VARCHAR(20) DEFAULT 'student',
  date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE otps (
  email VARCHAR(255) NOT NULL,
  code VARCHAR(6) NOT NULL,
  expires_at DATETIME NOT NULL,
  PRIMARY KEY (email)
);
CREATE TABLE found_items (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255),
  description TEXT,
  location VARCHAR(255),
  date_lost DATE,
  image_url VARCHAR(255),
  category VARCHAR(100),
  found_by VARCHAR(100),
  contact_info VARCHAR(100),
  status ENUM('unclaimed', 'claimed') DEFAULT 'unclaimed',
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
use lost_found;
ALTER TABLE found_items
ADD COLUMN user_id VARCHAR(100),
ADD CONSTRAINT fk_found_user
  FOREIGN KEY (user_id) REFERENCES students(student_id)
  ON DELETE CASCADE;
ALTER TABLE lost_items
ADD COLUMN user_id VARCHAR(100),
ADD CONSTRAINT fk_lost_user
  FOREIGN KEY (user_id) REFERENCES students(student_id)
  ON DELETE CASCADE;
CREATE TABLE lost_items (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255),
  description TEXT,
  location VARCHAR(255),
  date_lost DATE,
  image_url VARCHAR(255),
  category VARCHAR(100),
  lost_by VARCHAR(100),
  contact_info VARCHAR(100),
  status ENUM('unresolved', 'resolved') DEFAULT 'unresolved',
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE notifications (
  id INT AUTO_INCREMENT PRIMARY KEY,
  student_id VARCHAR(50) NOT NULL,
  item_id INT NOT NULL,
  message TEXT NOT NULL,
  is_read BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (student_id) REFERENCES students(student_id),
  FOREIGN KEY (item_id) REFERENCES found_items(id)
);
